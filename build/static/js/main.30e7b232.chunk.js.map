{"version":3,"sources":["services/logService.js","services/httpService.js","services/authService.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/common/filterGenre.jsx","components/common/pagination.jsx","services/fakeMovieService.js","components/popular/popularMovies.jsx","services/movieService.js","services/genreService.js","components/common/input.jsx","components/searchBox.jsx","components/movies.jsx","utils/paginate.js","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navBar.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","services/userService.js","components/register.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["logService","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","httpService","get","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","tokenKey","_callee","email","password","_ref","regenerator_default","a","wrap","_context","prev","next","http","sent","data","localStorage","setItem","stop","this","getJwt","getItem","authService","login","_x","_x2","_login","apply","arguments","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","Like","props","classes","liked","react_default","createElement","onClick","style","cursor","className","aria-hidden","TableHeader","raiseSort","path","sortColumn","Object","objectSpread","_this","order","onSort","renderSortIcon","column","_this2","columns","map","key","label","Component","TableBody","renderCell","item","content","_","createKey","_id","_this$props","Table","tableHeader","tableBody","MoviesTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","movie","Link","to","concat","title","like","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","table","FilterGenre","items","textProperty","valueProperty","onItemSelect","selectedItem","defaultProps","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","aria-label","page","genre","name","numberInStock","dailyRentalRate","publishDate","PopularMovies","state","getPageData","setState","id","dateTime","href","alt","movieUrl","getMovie","movieId","saveMovie","body","getGenres","Input","type","value","onChange","placeholder","htmlFor","SearchBox","common_input","e","currentTarget","Movies","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","t0","handleLike","toConsumableArray","index","indexOf","handlePageChange","handleGenreSelect","handleSearch","query","handleSort","_this$state","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","_this$state2","_this$getPageData","common_filterGenre","searchBox","moviesTable","common_pagination","popular_popularMovies","Customers","Rentals","NotFound","NavBar","data-toggle","data-target","aria-controls","aria-expanded","NavLink","Fragment","Select","options","rest","objectWithoutProperties","assign","option","Form","errors","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","message","err","return","validateProperty","obj","defineProperty","handleSubmit","preventDefault","doSubmit","handleChange","_ref2","input","errorMessage","disabled","common_select","autoFocus","MovieForm","genreId","string","required","number","min","max","history","match","params","mapToViewModel","_context3","replace","populateGenres","populateMovies","onSubmit","renderInput","renderSelect","renderButton","LoginForm","username","location","window","from","pathname","Redirect","RegisterForm","Logout","ProtectedRoute","component","render","Route","App","lib","navBar","Switch","protectedRoute","src_components_movies","exact","Boolean","hostname","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.30e7b232.chunk.js","sourcesContent":["// For simplicity, I changed the implementation of this module\n// and removed Raven. We can always add that in the future\n// and this module is the only module we need to modify.\n\nfunction init() {}\n\nfunction log(error) {\n  console.error(error);\n}\n\nexport default {\n  init,\n  log\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  // send headers with regests to make changes in the data\naxios.defaults.headers.common['x-auth-token'] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};\n","import jwtDecode from \"jwt-decode\";\nimport http from \"./httpService\";\n\nconst apiEndpoint = \"/auth\";\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n    const { data: jwt } = await http.post(apiEndpoint, { email, password });\n    // saves JWT in the browser localStorage\n    localStorage.setItem(tokenKey, jwt);\n}\n\nexport function loginWithJwt(jwt) {\n    localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n    localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n    try {\n        const jwt = localStorage.getItem(tokenKey);\n        return jwtDecode(jwt);\n    } catch (ex) {\n        return null;\n    }\n}\n\nexport function getJwt() {\n    return localStorage.getItem(tokenKey);\n}\n\nexport default {\n    login,\n    loginWithJwt,\n    logout,\n    getCurrentUser,\n    getJwt\n};\n","import React from \"react\";\n\nconst Like = props => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n  return (\n    <i\n      onClick={props.onClick}\n      style={{ cursor: \"pointer\" }}\n      className={classes}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default Like;\n","import React, { Component } from 'react';\n\nclass TableHeader extends Component {\n    raiseSort = path => {\n        const sortColumn = { ...this.props.sortColumn };\n        if (sortColumn.path === path )\n          sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc';\n        else {\n            sortColumn.path = path;\n            sortColumn.order = 'asc';\n        }\n        this.props.onSort(sortColumn);\n    };\n\n    renderSortIcon = column => {\n        const { sortColumn } = this.props;\n\n        if (column.path !== sortColumn.path) return null;\n        if (sortColumn.order === 'asc') return <i className='fa fa-sort-asc' />;\n        return <i className='fa fa-sort-desc' />;\n    };\n\n    render() {\n        return  (\n        <thead>\n            <tr>\n                { this.props.columns.map(column => (\n                    <th\n                        className='clickable'\n                        key={ column.path || column.key }\n                        onClick={() => this.raiseSort(column.path)}>\n                        { column.label } {this.renderSortIcon(column)}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n        );\n    }\n}\n\nexport default TableHeader;","import React, { Component } from 'react';\nimport _ from 'lodash';\n\nclass TableBody extends Component {\n    renderCell = (item, column) => {\n        if(column.content) return column.content(item);\n\n        return _.get(item, column.path);\n    };\n\n    createKey = (item, column) => {\n        return item._id + (column.path || column.key);\n    }\n\n    render() {\n        const { data, columns } = this.props;\n\n        return (\n            <tbody>\n                {data.map(item => (\n                    <tr key={item._id}>\n                        {columns.map(column =>\n                        <td key={this.createKey(item, column)}>\n                            {this.renderCell(item, column)}\n                        </td>)}\n                    </tr>\n                ))}\n            </tbody>\n         );\n    }\n}\n\nexport default TableBody;","import React from 'react';\nimport TableHeader from './tableHeader';\nimport TableBody from \"./tableBody\";\n\n\nconst Table  = ({ columns, sortColumn, onSort, data }) => {\n\n    return (\n        <table className=\"table\">\n            <TableHeader\n            columns={columns}\n            sortColumn={sortColumn}\n            onSort={onSort}\n             />\n             <TableBody columns={columns} data={data} />\n        </table>\n     );\n}\n\nexport default Table ;","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport auth from '../services/authService';\nimport Like from \"./common/like\";\nimport Table from \"./common/table\";\n\nclass MoviesTable extends Component {\n    columns = [\n        { path: 'title', label: 'Title', content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link> },\n        { path: 'genre.name', label: 'Genre' },\n        { path: 'numberInStock', label: 'Stock' },\n        { path: 'dailyRentalRate', label: 'Rate' },\n        {\n            key: 'like',\n            content: movie => (<Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />)\n        }\n    ];\n\n    deleteColumn = {\n            key: 'delete',\n            content: movie => (\n                <button\n                    onClick={() => this.props.onDelete(movie)}\n                    className=\"btn btn-danger btn-sm\">\n                    Delete\n                </button>\n            )\n        }\n\n    constructor() {\n        super();\n        const user = auth.getCurrentUser();\n        if (user && user.isAdmin)\n            this.columns.push(this.deleteColumn);\n    }\n\n    render() {\n        const { movies, onSort, sortColumn } = this.props;\n\n        return (\n            <Table\n                columns={this.columns}\n                data={movies}\n                sortColumn={sortColumn}\n                onSort={onSort}\n            />\n        );\n    }\n}\n\nexport default MoviesTable;\n","import React from \"react\";\nimport './filterGenre.css';\n\n\nconst FilterGenre = ({\n    items,\n    textProperty,\n    valueProperty,\n    onItemSelect,\n    selectedItem\n  }) => {\n  return (\n    <ul className=\"list-group\">\n\n      {items.map(item => (\n        <li\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n          onClick={() => onItemSelect(item)}\n          key={item[valueProperty]}\n        >\n          {item[textProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFilterGenre.defaultProps = {\n  valueProperty: \"_id\",\n  textProperty: \"name\"\n};\n\nexport default FilterGenre;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\nimport \"./pagination.css\";\n\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav aria-label=\"Page navigation example\">\n      <ul className=\"pagination\">\n        {pages.map(page => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <button className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  //   currentSize: PropTypes.number.isRequired,\n  onPageChange: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.title = movie.title;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now().toString();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getMovies } from \"../../services/fakeMovieService\";\nimport './popularMovies.css'\n\n\nclass PopularMovies extends Component {\n    state = {\n        movies: []\n    };\n\n    componentDidMount() {\n        this.setState({ movies: getMovies()});\n      }\n\n      getPageData = () => {\n        const {\n                movies\n                } = this.state;\n\n        return { data: movies };\n        };\n\n    render() {\n\n        const { data: movies } = this.getPageData();\n        return (\n        <div className=\"container popular-articles\">\n            <header className=\"popular-header header-card white-underline-links\">\n                <h2 className=\"header-card-title\">Popular Movies</h2>\n                <p className=\"header-card-sponsor\">January</p>\n            </header>\n            {movies.map(movie => (\n            <div key={movie.id} className=\"mini-card-grid\">\n                <article className=\"mini-card module module-article article\">\n                <header className=\"mini-article-card-header\">\n                    <div className=\"mini-article-card-title\">\n                    <div className=\"mini-article-subhead\">\n                    Movie\n                        <time dateTime=\"2019-01-01\">Jan 1, 2019</time>\n                    </div>\n                    </div>\n                    <Link to={`/movies/${movie._id}`}>\n                    <h2><a className=\"article-card-header read-article\">{movie.title}</a></h2>\n                    </Link>\n                    <p className=\"mini-article-subhead\">{movie.genre.name}</p>\n                </header>\n                <div className=\"mini-article-meta\">\n                    <div className=\"mini-article-byline\">\n                        <div className=\"author-avatar\">\n                            <a className=\"author-name\" href=\"/\">\n                                <img className=\"avatar avatar-80 photo\" alt=\"\"/>\n                            </a>\n                            <svg className=\"half-circle\">\n                            </svg>\n                        </div>\n                    </div>\n                </div>\n                </article>\n            </div>\n            ))}\n        </div>\n        );\n    }\n}\n\nexport default PopularMovies;","import http from \"./httpService\";\n\nconst apiEndpoint = \"/movies\";\n\nfunction movieUrl(id) {\n  return `${apiEndpoint}/${id}`;\n}\n\nexport function getMovies() {\n  return http.get(apiEndpoint);\n}\n\nexport function getMovie(movieId) {\n  return http.get(movieUrl(movieId));\n}\n\nexport function saveMovie(movie) {\n  if (movie._id) {\n    const body = { ...movie };\n    delete body._id;\n    return http.put(movieUrl(movie._id), body);\n  }\n\n  return http.post(apiEndpoint, movie);\n}\n\nexport function deleteMovie(movieId) {\n  return http.delete(movieUrl(movieId));\n}\n","\nimport http from \"./httpService\";\n\nexport function getGenres() {\n  return http.get(\"/genres\");\n}\n","import React from \"react\";\n\nconst Input = ({ type, name, label, value, error, onChange, placeholder }) => {\n    return (\n            <div className=\"form-group\">\n                <label htmlFor={name}>{label}</label>\n                <input\n                    value={value}\n                    onChange={onChange}\n                    id={name}\n                    placeholder={placeholder}\n                    name={name}\n                    type={type}\n                    className=\"form-control\"\n                />\n                {error && <div className=\"alert alert-danger\">{error}</div>}\n            </div>\n    );\n}\n\nexport default Input;","import React from 'react';\nimport Input from './common/input'\n\nconst SearchBox = ({ value, onChange}) => {\n\n    return (\n        <div>\n            <Input\n                type=\"text\"\n                name=\"query\"\n                value={value}\n                onChange={e => onChange(e.currentTarget.value)}\n                placeholder=\"Search...\"\n            />\n        </div>\n    );\n};\n\nexport default SearchBox;","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport MoviesTable from \"./moviesTable\";\nimport FilterGenre from \"./common/filterGenre\";\nimport Pagination from \"./common/pagination\";\nimport PopularMovies from \"./popular/popularMovies\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport { paginate } from \"../utils/paginate\";\nimport SearchBox from './searchBox';\nimport _ from 'lodash';\nimport \"./movies.css\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" }\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async movie => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter(m => m._id !== movie._id);\n    this.setState({ movies });\n\n    try {\n      await deleteMovie(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404) console.log(\"x\");\n      toast.error(\"This movie has already been deleted.\");\n\n      this.setState({ movies: originalMovies });\n    }\n  };\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSearch = query => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  getPageData = () => {\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      searchQuery,\n      movies: allMovies\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery)\n      filtered = allMovies.filter(m =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else if (selectedGenre && selectedGenre._id)\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const { user } = this.props;\n    const {\n      currentPage,\n      pageSize,\n      sortColumn,\n      searchQuery\n    } = this.state;\n\n    // if (count === 0) return <p>There are no Movies to display, sorry for the inconvenience!</p>;\n\n    const { totalCount, data: movies } = this.getPageData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-3\">\n          <FilterGenre\n            items={this.state.genres}\n            onItemSelect={this.handleGenreSelect}\n            selectedItem={this.state.selectedGenre}\n          />\n        </div>\n\n        <div className=\"col-md-9\">\n          <div className=\"typewriter\">\n            <h1>Welcome to Vidly</h1>\n          </div>\n          {user && <Link\n            className=\"btn btn-primary addBtn\"\n            to=\"/movies/new\">Add New Movie\n        </Link>}\n          <p className=\"moviesCount\" ><span>Showing {totalCount} Movies from database.</span></p>\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\n          <MoviesTable\n            className=\"col-md-12\"\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            onPageChange={this.handlePageChange}\n            currentPage={currentPage}\n          />\n        </div>\n        <div>\n          <PopularMovies\n          className=\"col-md-12\"/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}\n","import React from 'react';\n\nconst Customers = () => {\n    return <h1>Customers</h1> ;\n}\n\nexport default Customers;","import React from 'react';\n\nconst Rentals = () => {\n    return <h1>Rentals</h1>\n}\n\nexport default Rentals;","import React from 'react';\n\nconst NotFound  = () => {\n    return <h1>Oh no! something is not right.</h1>;\n}\n\nexport default NotFound;","import React from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nconst NavBar = ({ user }) => {\n    return  <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"container collapse navbar-collapse\" id=\"navbarNav\">\n                <div className=\"nav nav-pills\">\n                    <Link className=\"navbar-brand\" to=\"/\">Vidly</Link>\n                    <NavLink className=\"nav-link nav-item\" to=\"/movies\">Movies <span className=\"sr-only\">(current)</span></NavLink>\n                    <NavLink className=\"nav-link nav-item\" to=\"/customers\">Customers</NavLink>\n                    <NavLink className=\"nav-link nav-item\" to=\"/rentals\">Rentals</NavLink>\n                    {!user && (\n                        <React.Fragment>\n                        <NavLink className=\"nav-item nav-link\" to=\"/login\">\n                            Login\n                        </NavLink>\n                        <NavLink className=\"nav-item nav-link\" to=\"/register\">\n                            Register\n                        </NavLink>\n                        </React.Fragment>\n                    )}\n                    {user && (\n                        <React.Fragment>\n                        <NavLink className=\"nav-item nav-link\" to=\"/profile\">\n                            {user.name}\n                        </NavLink>\n                        <NavLink className=\"nav-item nav-link\" to=\"/logout\">\n                            Logout\n                        </NavLink>\n                        </React.Fragment>\n                    )}\n                </div>\n                </div>\n            </nav>;\n}\n\nexport default NavBar;","import React from \"react\";\n\nconst Select = ({ name, label, options, error, ...rest }) => {\n    return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n                <select name={name} id={name} {...rest} className='form-control'>\n                    <option value=''/>\n                    {options.map(option => (\n                    <option key={option._id} value={option._id}>\n                    {option.name}\n                    </option>\n                    ))}\n                </select>\n            {error && <div className=\"alert alert-danger\">{error}</div>}\n        </div>\n    );\n};\n\nexport default Select;","import React, { Component } from 'react';\nimport Input from './input';\nimport Joi from 'joi-browser';\nimport Select from './select';\n\nclass Form extends Component {\n    state = {\n        data: {},\n        errors: {}\n    };\n\n    validate = () => {\n        const options = { abortEarly: false };\n        const { error } = Joi.validate(this.state.data, this.schema, options);\n        if (!error) return null;\n\n        const errors = {};\n        for (let item of error.details) errors[item.path[0]] = item.message;\n        return errors;\n    };\n\n    validateProperty = ({name, value}) => {\n        const obj = { [name]: value };\n        const schema = { [name]: this.schema[name] };\n        const { error } = Joi.validate(obj, schema);\n        return error ? error.details[0].message : null;\n    };\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        const errors = this.validate();\n        this.setState({ errors: errors || {} });\n        if (errors) return;\n\n        this.doSubmit();\n      };\n\n    handleChange = ({ currentTarget: input }) => {\n\n        const errors =  {...this.errors};\n        const errorMessage = this.validateProperty(input);\n        if (errorMessage) errors[input.name] = errorMessage;\n        else delete errors[input.name];\n\n        const data = { ...this.state.data };\n        data[input.name] = input.value;\n        this.setState({ data, errors });\n    };\n\n    renderButton(label) {\n        return (\n            <button\n                // enable/disable button\n                disabled={this.validate()}\n                className=\"btn btn-primary\">\n                {label}\n            </button>\n        );\n    }\n\n    renderSelect(name, label, options) {\n        const { data, errors } = this.state;\n\n        return (\n            <Select\n                name={name}\n                value={data[name]}\n                label={label}\n                options={options}\n                onChange={this.handleChange}\n                error={errors[name]}\n            />\n        );\n    }\n\n    renderInput(name, label, type = 'text') {\n        const { data, errors } = this.state;\n\n        return (\n            <Input\n                autoFocus\n                type={type}\n                name={name}\n                value={data[name]}\n                label={label}\n                onChange={this.handleChange}\n                error={errors[name]}\n            />\n        );\n    }\n}\n\nexport default Form;","import React from 'react';\nimport Joi from 'joi-browser';\nimport Form from './common/form';\nimport { getMovie, saveMovie } from '../services/movieService';\nimport { getGenres } from '../services/genreService';\n\nclass MovieForm extends Form {\n    state = {\n        data: { title: '', genreId: '', numberInStock: '', dailyRentalRate: '' },\n        genres: [],\n        errors: {}\n    };\n\n    schema = {\n        _id: Joi.string(),\n        title: Joi.string().required().label('Title'),\n        genreId: Joi.string().required().label('Genre'),\n        numberInStock: Joi.number().required().min(0).max(100).label('Number in Stock'),\n        dailyRentalRate: Joi.number().required().min(0).max(10).label('Rate')\n    };\n\n    async populateGenres() {\n        const { data: genres } = await getGenres();\n        this.setState({ genres });\n    }\n\n    async populateMovies() {\n        try {\n            const movieId = this.props.match.params.id;\n            if (movieId === 'new') return;\n\n            const { data: movie } = await getMovie(movieId);\n            this.setState({ data: this.mapToViewModel(movie) });\n        }\n        catch (ex) {\n            if (ex.response && ex.response.status === 404)\n                this.props.history.replace('/not-found');\n        }\n    }\n\n    async componentDidMount() {\n        await this.populateGenres();\n        await this.populateMovies();\n    };\n\n    mapToViewModel(movie) {\n        return {\n            _id: movie._id,\n            title: movie.title,\n            genreId: movie.genre._id,\n            numberInStock: movie.numberInStock,\n            dailyRentalRate: movie.dailyRentalRate\n        };\n    }\n\n    doSubmit = async () => {\n        // call the server\n        await saveMovie(this.state.data);\n        console.log(\"Submitted\");\n\n        this.props.history.push('/movies');\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>Movie Form</h1>\n                <form onSubmit={this.handleSubmit}>\n                    {this.renderInput(\"title\", \"Title\")}\n                    {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\n                    {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\n                    {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n                    {this.renderButton(\"Save\")}\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default MovieForm;\n","import React from 'react';\nimport Form from './common/form';\nimport Joi from 'joi-browser';\nimport auth from '../services/authService';\nimport { Redirect } from 'react-router-dom';\n\n\nclass LoginForm extends Form {\n    state = {\n        data: { username: '', password: ''},\n        errors: {}\n    };\n\n    schema = {\n        username: Joi.string().required().label('Username'),\n        password: Joi.string().required().label('Password'),\n    }\n\n    doSubmit = async () => {\n        // call the server\n        try {\n            const { data } = this.state;\n            // Json web token\n            await auth.login(data.username, data.password);\n            // redirects user to homepage\n            const { state } = this.props.location;\n            window.location = state ? state.from.pathname : '/';\n            console.log(\"Submitted\");\n        } catch (ex) {\n            if (ex.response && ex.response.status === 400 ) {\n                const errors = { ...this.state.errors };\n                errors.username = ex.response.data;\n                this.setState({ errors });\n            }\n        }\n    };\n\n    render() {\n        // redirect to home if loged user try to go to /login\n        if (auth.getCurrentUser()) return <Redirect to='/' />\n        \n        return  (\n            <div>\n                <h1>Login</h1>\n                    <form onSubmit={this.handleSubmit}>\n                        {this.renderInput('username', 'Username')}\n                        {this.renderInput('password', 'Password', 'password')}\n                        {this.renderButton('Login')}\n                    </form>\n                </div>\n            );\n        }\n    }\n\nexport default LoginForm;","import http from \"./httpService\";\n\nconst apiEndpoint = \"/users\";\n\nexport function register(user) {\n  return http.post(apiEndpoint, {\n    email: user.username,\n    password: user.password,\n    name: user.name\n  });\n}\n","import React from 'react';\nimport Form from './common/form';\nimport Joi from 'joi-browser';\nimport auth from '../services/authService';\nimport * as userService from '../services/userService';\n\nclass RegisterForm extends Form {\n    state = {\n        data: { username: '', password: '', name: ''},\n        errors: {}\n    }\n\n    schema = {\n        username: Joi.string().required().email().label('Username'),\n        password: Joi.string().required().min(5).label('Password'),\n        name: Joi.string().required().label('Name')\n    }\n\n    // call the server\n    doSubmit = async () => {\n        try {\n            // Json web token\n            const response = await userService.register(this.state.data);\n            // saves JWT in the browser localStorage\n            auth.loginWithJwt(response.headers['x-auth-token']);\n            // redirects user to homepage\n            this.props.history.push('/');\n            console.log(\"Submitted\");\n            console.log(response);\n        } catch (ex) {\n            if (ex.response && ex.response.status === 400) {\n                const errors = { ...this.state.errors };\n                errors.username = ex.response.data;\n                this.setState({ errors });\n            }\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <h1>Register</h1>\n                    <form onSubmit={this.handleSubmit}>\n                        {this.renderInput('username', 'Username')}\n                        {this.renderInput('password', 'Password', 'password')}\n                        {this.renderInput('name', 'Name')}\n                        {this.renderButton('Register')}\n                    </form>\n            </div>\n        );\n    }\n}\n\nexport default RegisterForm;","import React, { Component } from 'react';\nimport auth from '../services/authService';\n\nclass Logout extends Component {\n    componentDidMount() {\n        auth.logout();\n        window.location = '/';\n    }\n\n    render() {\n        return null;\n    }\n}\n\nexport default Logout;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"../../services/authService\";\n\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!auth.getCurrentUser())\n          return (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location }\n              }}\n            />\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { Component } from \"react\";\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport Movies from \"./components/movies\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport NavBar from \"./components/navBar\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from './components/loginForm';\nimport RegisterForm from './components/register';\nimport Logout from './components/logout';\nimport auth from './services/authService';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./App.css\";\nimport ProtectedRoute from './components/common/protectedRoute';\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n        <React.Fragment>\n        <ToastContainer />\n        <NavBar user={ user } />\n        <main className=\"container\">\n            <Switch>\n                <ProtectedRoute\n                      path=\"/movies/:id\"\n                      component={MovieForm}\n                />\n                <Route\n                      path=\"/movies\"\n                      render={props => <Movies {...props} user={ user }\n                      />}>\n                </Route>\n                <Route path=\"/customers\" component={Customers}></Route>\n                <Route path=\"/rentals\" component={Rentals}></Route>\n                <Route path=\"/not-found\" component={NotFound}></Route>\n                <Route path=\"/login\" component={LoginForm}></Route>\n                <Route path=\"/logout\" component={Logout}></Route>\n                <Route path=\"/register\" component={RegisterForm}></Route>\n                <Redirect from=\"/\" exact to=\"/movies\" />\n                <Redirect to=\"/not-found\" />\n            </Switch>\n        </main>\n        </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}